Grammar

    0 $accept: program $end

    1 program: module_item_list

    2 module_item_list: module_item
    3                 | module_item_list module_item

    4 module_item: label
    5            | instruction_block
    6            | include_statement
    7            | data_definition

    8 label: TOK_SYMBOL

    9 type_spec: TOK_UNUM_TYPE
   10          | TOK_INUM_TYPE
   11          | TOK_FNUM_TYPE
   12          | TOK_BOOL_TYPE
   13          | TOK_CONST TOK_UNUM_TYPE
   14          | TOK_CONST TOK_INUM_TYPE
   15          | TOK_CONST TOK_FNUM_TYPE
   16          | TOK_CONST TOK_BOOL_TYPE

   17 include_statement: TOK_INCLUDE TOK_STR

   18 data_definition: type_spec TOK_SYMBOL
   19                | type_spec TOK_SYMBOL '=' expression
   20                | type_spec TOK_SYMBOL '=' TOK_SYMBOL
   21                | TOK_STR_TYPE TOK_SYMBOL '=' TOK_STR

   22 class1_instruction: TOK_EXIT
   23                   | TOK_NOOP
   24                   | TOK_RETURN
   25                   | TOK_POP
   26                   | TOK_NOT
   27                   | TOK_NEG
   28                   | TOK_EQ
   29                   | TOK_NEQ
   30                   | TOK_LEQ
   31                   | TOK_GEQ
   32                   | TOK_LESS
   33                   | TOK_GTR
   34                   | TOK_ADD
   35                   | TOK_SUB
   36                   | TOK_MUL
   37                   | TOK_DIV
   38                   | TOK_MOD
   39                   | TOK_PRINT

   40 class2_instruction: TOK_CALL expression
   41                   | TOK_CALL TOK_SYMBOL
   42                   | TOK_JMP expression
   43                   | TOK_JMP TOK_SYMBOL
   44                   | TOK_JMPIF expression
   45                   | TOK_JMPIF TOK_SYMBOL
   46                   | TOK_PUSH expression
   47                   | TOK_PUSH TOK_SYMBOL

   48 class4_instruction: TOK_CALLX TOK_SYMBOL
   49                   | TOK_EXCEPT TOK_SYMBOL
   50                   | TOK_ERROR TOK_SYMBOL
   51                   | TOK_SAVE TOK_SYMBOL

   52 class3_instruction: TOK_CAST TOK_SYMBOL type_spec

   53 instruction_block: label instruction_list

   54 instruction_item: class1_instruction
   55                 | class2_instruction
   56                 | class3_instruction
   57                 | class4_instruction

   58 instruction_list: instruction_item
   59                 | instruction_list instruction_item

   60 expression_factor: TOK_UNUM
   61                  | TOK_INUM
   62                  | TOK_FNUM

   63 expression: expression_factor
   64           | expression '+' expression
   65           | expression '-' expression
   66           | expression '*' expression
   67           | expression '/' expression
   68           | expression '%' expression
   69           | '-' expression
   70           | '(' expression ')'


Terminals, with rules where they appear

$end (0) 0
'%' (37) 68
'(' (40) 70
')' (41) 70
'*' (42) 66
'+' (43) 64
'-' (45) 65 69
'/' (47) 67
'=' (61) 19 20 21
error (256)
TOK_SYMBOL <str> (258) 8 18 19 20 21 41 43 45 47 48 49 50 51 52
TOK_UNUM <unum> (259) 60
TOK_INUM <inum> (260) 61
TOK_FNUM <fnum> (261) 62
TOK_STR <str> (262) 17 21
TOK_ERROR <opcode> (263) 50
TOK_NOOP <opcode> (264) 23
TOK_EXIT <opcode> (265) 22
TOK_CALL <opcode> (266) 40 41
TOK_CALLX <opcode> (267) 48
TOK_RETURN <opcode> (268) 24
TOK_JMP <opcode> (269) 42 43
TOK_JMPIF <opcode> (270) 44 45
TOK_EXCEPT <opcode> (271) 49
TOK_PUSH <opcode> (272) 46 47
TOK_POP <opcode> (273) 25
TOK_SAVE <opcode> (274) 51
TOK_NOT <opcode> (275) 26
TOK_EQ <opcode> (276) 28
TOK_NEQ <opcode> (277) 29
TOK_LEQ <opcode> (278) 30
TOK_GEQ <opcode> (279) 31
TOK_LESS <opcode> (280) 32
TOK_PRINT <opcode> (281) 39
TOK_GTR <opcode> (282) 33
TOK_NEG <opcode> (283) 27
TOK_ADD <opcode> (284) 34
TOK_SUB <opcode> (285) 35
TOK_MUL <opcode> (286) 36
TOK_DIV <opcode> (287) 37
TOK_MOD <opcode> (288) 38
TOK_UNUM_TYPE <type> (289) 9 13
TOK_INUM_TYPE <type> (290) 10 14
TOK_FNUM_TYPE <type> (291) 11 15
TOK_CONST <type> (292) 13 14 15 16
TOK_STR_TYPE <type> (293) 21
TOK_BOOL_TYPE <type> (294) 12 16
TOK_CAST <type> (295) 52
TOK_INCLUDE (296) 17
NEGATE (297)


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1, on right: 0
module_item_list (53)
    on left: 2 3, on right: 1 3
module_item (54)
    on left: 4 5 6 7, on right: 2 3
label <str> (55)
    on left: 8, on right: 4 53
type_spec <value> (56)
    on left: 9 10 11 12 13 14 15 16, on right: 18 19 20 52
include_statement (57)
    on left: 17, on right: 6
data_definition (58)
    on left: 18 19 20 21, on right: 7
class1_instruction (59)
    on left: 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39,
    on right: 54
class2_instruction (60)
    on left: 40 41 42 43 44 45 46 47, on right: 55
class4_instruction (61)
    on left: 48 49 50 51, on right: 57
class3_instruction (62)
    on left: 52, on right: 56
instruction_block (63)
    on left: 53, on right: 5
instruction_item (64)
    on left: 54 55 56 57, on right: 58 59
instruction_list (65)
    on left: 58 59, on right: 53 59
expression_factor <value> (66)
    on left: 60 61 62, on right: 63
expression <value> (67)
    on left: 63 64 65 66 67 68 69 70, on right: 19 40 42 44 46 64 65
    66 67 68 69 70


State 0

    0 $accept: . program $end

    TOK_SYMBOL     shift, and go to state 1
    TOK_UNUM_TYPE  shift, and go to state 2
    TOK_INUM_TYPE  shift, and go to state 3
    TOK_FNUM_TYPE  shift, and go to state 4
    TOK_CONST      shift, and go to state 5
    TOK_STR_TYPE   shift, and go to state 6
    TOK_BOOL_TYPE  shift, and go to state 7
    TOK_INCLUDE    shift, and go to state 8

    program            go to state 9
    module_item_list   go to state 10
    module_item        go to state 11
    label              go to state 12
    type_spec          go to state 13
    include_statement  go to state 14
    data_definition    go to state 15
    instruction_block  go to state 16


State 1

    8 label: TOK_SYMBOL .

    $default  reduce using rule 8 (label)


State 2

    9 type_spec: TOK_UNUM_TYPE .

    $default  reduce using rule 9 (type_spec)


State 3

   10 type_spec: TOK_INUM_TYPE .

    $default  reduce using rule 10 (type_spec)


State 4

   11 type_spec: TOK_FNUM_TYPE .

    $default  reduce using rule 11 (type_spec)


State 5

   13 type_spec: TOK_CONST . TOK_UNUM_TYPE
   14          | TOK_CONST . TOK_INUM_TYPE
   15          | TOK_CONST . TOK_FNUM_TYPE
   16          | TOK_CONST . TOK_BOOL_TYPE

    TOK_UNUM_TYPE  shift, and go to state 17
    TOK_INUM_TYPE  shift, and go to state 18
    TOK_FNUM_TYPE  shift, and go to state 19
    TOK_BOOL_TYPE  shift, and go to state 20


State 6

   21 data_definition: TOK_STR_TYPE . TOK_SYMBOL '=' TOK_STR

    TOK_SYMBOL  shift, and go to state 21


State 7

   12 type_spec: TOK_BOOL_TYPE .

    $default  reduce using rule 12 (type_spec)


State 8

   17 include_statement: TOK_INCLUDE . TOK_STR

    TOK_STR  shift, and go to state 22


State 9

    0 $accept: program . $end

    $end  shift, and go to state 23


State 10

    1 program: module_item_list .  [$end]
    3 module_item_list: module_item_list . module_item

    TOK_SYMBOL     shift, and go to state 1
    TOK_UNUM_TYPE  shift, and go to state 2
    TOK_INUM_TYPE  shift, and go to state 3
    TOK_FNUM_TYPE  shift, and go to state 4
    TOK_CONST      shift, and go to state 5
    TOK_STR_TYPE   shift, and go to state 6
    TOK_BOOL_TYPE  shift, and go to state 7
    TOK_INCLUDE    shift, and go to state 8

    $default  reduce using rule 1 (program)

    module_item        go to state 24
    label              go to state 12
    type_spec          go to state 13
    include_statement  go to state 14
    data_definition    go to state 15
    instruction_block  go to state 16


State 11

    2 module_item_list: module_item .

    $default  reduce using rule 2 (module_item_list)


State 12

    4 module_item: label .  [$end, TOK_SYMBOL, TOK_UNUM_TYPE, TOK_INUM_TYPE, TOK_FNUM_TYPE, TOK_CONST, TOK_STR_TYPE, TOK_BOOL_TYPE, TOK_INCLUDE]
   53 instruction_block: label . instruction_list

    TOK_ERROR   shift, and go to state 25
    TOK_NOOP    shift, and go to state 26
    TOK_EXIT    shift, and go to state 27
    TOK_CALL    shift, and go to state 28
    TOK_CALLX   shift, and go to state 29
    TOK_RETURN  shift, and go to state 30
    TOK_JMP     shift, and go to state 31
    TOK_JMPIF   shift, and go to state 32
    TOK_EXCEPT  shift, and go to state 33
    TOK_PUSH    shift, and go to state 34
    TOK_POP     shift, and go to state 35
    TOK_SAVE    shift, and go to state 36
    TOK_NOT     shift, and go to state 37
    TOK_EQ      shift, and go to state 38
    TOK_NEQ     shift, and go to state 39
    TOK_LEQ     shift, and go to state 40
    TOK_GEQ     shift, and go to state 41
    TOK_LESS    shift, and go to state 42
    TOK_PRINT   shift, and go to state 43
    TOK_GTR     shift, and go to state 44
    TOK_NEG     shift, and go to state 45
    TOK_ADD     shift, and go to state 46
    TOK_SUB     shift, and go to state 47
    TOK_MUL     shift, and go to state 48
    TOK_DIV     shift, and go to state 49
    TOK_MOD     shift, and go to state 50
    TOK_CAST    shift, and go to state 51

    $default  reduce using rule 4 (module_item)

    class1_instruction  go to state 52
    class2_instruction  go to state 53
    class4_instruction  go to state 54
    class3_instruction  go to state 55
    instruction_item    go to state 56
    instruction_list    go to state 57


State 13

   18 data_definition: type_spec . TOK_SYMBOL
   19                | type_spec . TOK_SYMBOL '=' expression
   20                | type_spec . TOK_SYMBOL '=' TOK_SYMBOL

    TOK_SYMBOL  shift, and go to state 58


State 14

    6 module_item: include_statement .

    $default  reduce using rule 6 (module_item)


State 15

    7 module_item: data_definition .

    $default  reduce using rule 7 (module_item)


State 16

    5 module_item: instruction_block .

    $default  reduce using rule 5 (module_item)


State 17

   13 type_spec: TOK_CONST TOK_UNUM_TYPE .

    $default  reduce using rule 13 (type_spec)


State 18

   14 type_spec: TOK_CONST TOK_INUM_TYPE .

    $default  reduce using rule 14 (type_spec)


State 19

   15 type_spec: TOK_CONST TOK_FNUM_TYPE .

    $default  reduce using rule 15 (type_spec)


State 20

   16 type_spec: TOK_CONST TOK_BOOL_TYPE .

    $default  reduce using rule 16 (type_spec)


State 21

   21 data_definition: TOK_STR_TYPE TOK_SYMBOL . '=' TOK_STR

    '='  shift, and go to state 59


State 22

   17 include_statement: TOK_INCLUDE TOK_STR .

    $default  reduce using rule 17 (include_statement)


State 23

    0 $accept: program $end .

    $default  accept


State 24

    3 module_item_list: module_item_list module_item .

    $default  reduce using rule 3 (module_item_list)


State 25

   50 class4_instruction: TOK_ERROR . TOK_SYMBOL

    TOK_SYMBOL  shift, and go to state 60


State 26

   23 class1_instruction: TOK_NOOP .

    $default  reduce using rule 23 (class1_instruction)


State 27

   22 class1_instruction: TOK_EXIT .

    $default  reduce using rule 22 (class1_instruction)


State 28

   40 class2_instruction: TOK_CALL . expression
   41                   | TOK_CALL . TOK_SYMBOL

    TOK_SYMBOL  shift, and go to state 61
    TOK_UNUM    shift, and go to state 62
    TOK_INUM    shift, and go to state 63
    TOK_FNUM    shift, and go to state 64
    '-'         shift, and go to state 65
    '('         shift, and go to state 66

    expression_factor  go to state 67
    expression         go to state 68


State 29

   48 class4_instruction: TOK_CALLX . TOK_SYMBOL

    TOK_SYMBOL  shift, and go to state 69


State 30

   24 class1_instruction: TOK_RETURN .

    $default  reduce using rule 24 (class1_instruction)


State 31

   42 class2_instruction: TOK_JMP . expression
   43                   | TOK_JMP . TOK_SYMBOL

    TOK_SYMBOL  shift, and go to state 70
    TOK_UNUM    shift, and go to state 62
    TOK_INUM    shift, and go to state 63
    TOK_FNUM    shift, and go to state 64
    '-'         shift, and go to state 65
    '('         shift, and go to state 66

    expression_factor  go to state 67
    expression         go to state 71


State 32

   44 class2_instruction: TOK_JMPIF . expression
   45                   | TOK_JMPIF . TOK_SYMBOL

    TOK_SYMBOL  shift, and go to state 72
    TOK_UNUM    shift, and go to state 62
    TOK_INUM    shift, and go to state 63
    TOK_FNUM    shift, and go to state 64
    '-'         shift, and go to state 65
    '('         shift, and go to state 66

    expression_factor  go to state 67
    expression         go to state 73


State 33

   49 class4_instruction: TOK_EXCEPT . TOK_SYMBOL

    TOK_SYMBOL  shift, and go to state 74


State 34

   46 class2_instruction: TOK_PUSH . expression
   47                   | TOK_PUSH . TOK_SYMBOL

    TOK_SYMBOL  shift, and go to state 75
    TOK_UNUM    shift, and go to state 62
    TOK_INUM    shift, and go to state 63
    TOK_FNUM    shift, and go to state 64
    '-'         shift, and go to state 65
    '('         shift, and go to state 66

    expression_factor  go to state 67
    expression         go to state 76


State 35

   25 class1_instruction: TOK_POP .

    $default  reduce using rule 25 (class1_instruction)


State 36

   51 class4_instruction: TOK_SAVE . TOK_SYMBOL

    TOK_SYMBOL  shift, and go to state 77


State 37

   26 class1_instruction: TOK_NOT .

    $default  reduce using rule 26 (class1_instruction)


State 38

   28 class1_instruction: TOK_EQ .

    $default  reduce using rule 28 (class1_instruction)


State 39

   29 class1_instruction: TOK_NEQ .

    $default  reduce using rule 29 (class1_instruction)


State 40

   30 class1_instruction: TOK_LEQ .

    $default  reduce using rule 30 (class1_instruction)


State 41

   31 class1_instruction: TOK_GEQ .

    $default  reduce using rule 31 (class1_instruction)


State 42

   32 class1_instruction: TOK_LESS .

    $default  reduce using rule 32 (class1_instruction)


State 43

   39 class1_instruction: TOK_PRINT .

    $default  reduce using rule 39 (class1_instruction)


State 44

   33 class1_instruction: TOK_GTR .

    $default  reduce using rule 33 (class1_instruction)


State 45

   27 class1_instruction: TOK_NEG .

    $default  reduce using rule 27 (class1_instruction)


State 46

   34 class1_instruction: TOK_ADD .

    $default  reduce using rule 34 (class1_instruction)


State 47

   35 class1_instruction: TOK_SUB .

    $default  reduce using rule 35 (class1_instruction)


State 48

   36 class1_instruction: TOK_MUL .

    $default  reduce using rule 36 (class1_instruction)


State 49

   37 class1_instruction: TOK_DIV .

    $default  reduce using rule 37 (class1_instruction)


State 50

   38 class1_instruction: TOK_MOD .

    $default  reduce using rule 38 (class1_instruction)


State 51

   52 class3_instruction: TOK_CAST . TOK_SYMBOL type_spec

    TOK_SYMBOL  shift, and go to state 78


State 52

   54 instruction_item: class1_instruction .

    $default  reduce using rule 54 (instruction_item)


State 53

   55 instruction_item: class2_instruction .

    $default  reduce using rule 55 (instruction_item)


State 54

   57 instruction_item: class4_instruction .

    $default  reduce using rule 57 (instruction_item)


State 55

   56 instruction_item: class3_instruction .

    $default  reduce using rule 56 (instruction_item)


State 56

   58 instruction_list: instruction_item .

    $default  reduce using rule 58 (instruction_list)


State 57

   53 instruction_block: label instruction_list .  [$end, TOK_SYMBOL, TOK_UNUM_TYPE, TOK_INUM_TYPE, TOK_FNUM_TYPE, TOK_CONST, TOK_STR_TYPE, TOK_BOOL_TYPE, TOK_INCLUDE]
   59 instruction_list: instruction_list . instruction_item

    TOK_ERROR   shift, and go to state 25
    TOK_NOOP    shift, and go to state 26
    TOK_EXIT    shift, and go to state 27
    TOK_CALL    shift, and go to state 28
    TOK_CALLX   shift, and go to state 29
    TOK_RETURN  shift, and go to state 30
    TOK_JMP     shift, and go to state 31
    TOK_JMPIF   shift, and go to state 32
    TOK_EXCEPT  shift, and go to state 33
    TOK_PUSH    shift, and go to state 34
    TOK_POP     shift, and go to state 35
    TOK_SAVE    shift, and go to state 36
    TOK_NOT     shift, and go to state 37
    TOK_EQ      shift, and go to state 38
    TOK_NEQ     shift, and go to state 39
    TOK_LEQ     shift, and go to state 40
    TOK_GEQ     shift, and go to state 41
    TOK_LESS    shift, and go to state 42
    TOK_PRINT   shift, and go to state 43
    TOK_GTR     shift, and go to state 44
    TOK_NEG     shift, and go to state 45
    TOK_ADD     shift, and go to state 46
    TOK_SUB     shift, and go to state 47
    TOK_MUL     shift, and go to state 48
    TOK_DIV     shift, and go to state 49
    TOK_MOD     shift, and go to state 50
    TOK_CAST    shift, and go to state 51

    $default  reduce using rule 53 (instruction_block)

    class1_instruction  go to state 52
    class2_instruction  go to state 53
    class4_instruction  go to state 54
    class3_instruction  go to state 55
    instruction_item    go to state 79


State 58

   18 data_definition: type_spec TOK_SYMBOL .  [$end, TOK_SYMBOL, TOK_UNUM_TYPE, TOK_INUM_TYPE, TOK_FNUM_TYPE, TOK_CONST, TOK_STR_TYPE, TOK_BOOL_TYPE, TOK_INCLUDE]
   19                | type_spec TOK_SYMBOL . '=' expression
   20                | type_spec TOK_SYMBOL . '=' TOK_SYMBOL

    '='  shift, and go to state 80

    $default  reduce using rule 18 (data_definition)


State 59

   21 data_definition: TOK_STR_TYPE TOK_SYMBOL '=' . TOK_STR

    TOK_STR  shift, and go to state 81


State 60

   50 class4_instruction: TOK_ERROR TOK_SYMBOL .

    $default  reduce using rule 50 (class4_instruction)


State 61

   41 class2_instruction: TOK_CALL TOK_SYMBOL .

    $default  reduce using rule 41 (class2_instruction)


State 62

   60 expression_factor: TOK_UNUM .

    $default  reduce using rule 60 (expression_factor)


State 63

   61 expression_factor: TOK_INUM .

    $default  reduce using rule 61 (expression_factor)


State 64

   62 expression_factor: TOK_FNUM .

    $default  reduce using rule 62 (expression_factor)


State 65

   69 expression: '-' . expression

    TOK_UNUM  shift, and go to state 62
    TOK_INUM  shift, and go to state 63
    TOK_FNUM  shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 66

    expression_factor  go to state 67
    expression         go to state 82


State 66

   70 expression: '(' . expression ')'

    TOK_UNUM  shift, and go to state 62
    TOK_INUM  shift, and go to state 63
    TOK_FNUM  shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 66

    expression_factor  go to state 67
    expression         go to state 83


State 67

   63 expression: expression_factor .

    $default  reduce using rule 63 (expression)


State 68

   40 class2_instruction: TOK_CALL expression .  [$end, TOK_SYMBOL, TOK_ERROR, TOK_NOOP, TOK_EXIT, TOK_CALL, TOK_CALLX, TOK_RETURN, TOK_JMP, TOK_JMPIF, TOK_EXCEPT, TOK_PUSH, TOK_POP, TOK_SAVE, TOK_NOT, TOK_EQ, TOK_NEQ, TOK_LEQ, TOK_GEQ, TOK_LESS, TOK_PRINT, TOK_GTR, TOK_NEG, TOK_ADD, TOK_SUB, TOK_MUL, TOK_DIV, TOK_MOD, TOK_UNUM_TYPE, TOK_INUM_TYPE, TOK_FNUM_TYPE, TOK_CONST, TOK_STR_TYPE, TOK_BOOL_TYPE, TOK_CAST, TOK_INCLUDE]
   64 expression: expression . '+' expression
   65           | expression . '-' expression
   66           | expression . '*' expression
   67           | expression . '/' expression
   68           | expression . '%' expression

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '%'  shift, and go to state 88

    $default  reduce using rule 40 (class2_instruction)


State 69

   48 class4_instruction: TOK_CALLX TOK_SYMBOL .

    $default  reduce using rule 48 (class4_instruction)


State 70

   43 class2_instruction: TOK_JMP TOK_SYMBOL .

    $default  reduce using rule 43 (class2_instruction)


State 71

   42 class2_instruction: TOK_JMP expression .  [$end, TOK_SYMBOL, TOK_ERROR, TOK_NOOP, TOK_EXIT, TOK_CALL, TOK_CALLX, TOK_RETURN, TOK_JMP, TOK_JMPIF, TOK_EXCEPT, TOK_PUSH, TOK_POP, TOK_SAVE, TOK_NOT, TOK_EQ, TOK_NEQ, TOK_LEQ, TOK_GEQ, TOK_LESS, TOK_PRINT, TOK_GTR, TOK_NEG, TOK_ADD, TOK_SUB, TOK_MUL, TOK_DIV, TOK_MOD, TOK_UNUM_TYPE, TOK_INUM_TYPE, TOK_FNUM_TYPE, TOK_CONST, TOK_STR_TYPE, TOK_BOOL_TYPE, TOK_CAST, TOK_INCLUDE]
   64 expression: expression . '+' expression
   65           | expression . '-' expression
   66           | expression . '*' expression
   67           | expression . '/' expression
   68           | expression . '%' expression

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '%'  shift, and go to state 88

    $default  reduce using rule 42 (class2_instruction)


State 72

   45 class2_instruction: TOK_JMPIF TOK_SYMBOL .

    $default  reduce using rule 45 (class2_instruction)


State 73

   44 class2_instruction: TOK_JMPIF expression .  [$end, TOK_SYMBOL, TOK_ERROR, TOK_NOOP, TOK_EXIT, TOK_CALL, TOK_CALLX, TOK_RETURN, TOK_JMP, TOK_JMPIF, TOK_EXCEPT, TOK_PUSH, TOK_POP, TOK_SAVE, TOK_NOT, TOK_EQ, TOK_NEQ, TOK_LEQ, TOK_GEQ, TOK_LESS, TOK_PRINT, TOK_GTR, TOK_NEG, TOK_ADD, TOK_SUB, TOK_MUL, TOK_DIV, TOK_MOD, TOK_UNUM_TYPE, TOK_INUM_TYPE, TOK_FNUM_TYPE, TOK_CONST, TOK_STR_TYPE, TOK_BOOL_TYPE, TOK_CAST, TOK_INCLUDE]
   64 expression: expression . '+' expression
   65           | expression . '-' expression
   66           | expression . '*' expression
   67           | expression . '/' expression
   68           | expression . '%' expression

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '%'  shift, and go to state 88

    $default  reduce using rule 44 (class2_instruction)


State 74

   49 class4_instruction: TOK_EXCEPT TOK_SYMBOL .

    $default  reduce using rule 49 (class4_instruction)


State 75

   47 class2_instruction: TOK_PUSH TOK_SYMBOL .

    $default  reduce using rule 47 (class2_instruction)


State 76

   46 class2_instruction: TOK_PUSH expression .  [$end, TOK_SYMBOL, TOK_ERROR, TOK_NOOP, TOK_EXIT, TOK_CALL, TOK_CALLX, TOK_RETURN, TOK_JMP, TOK_JMPIF, TOK_EXCEPT, TOK_PUSH, TOK_POP, TOK_SAVE, TOK_NOT, TOK_EQ, TOK_NEQ, TOK_LEQ, TOK_GEQ, TOK_LESS, TOK_PRINT, TOK_GTR, TOK_NEG, TOK_ADD, TOK_SUB, TOK_MUL, TOK_DIV, TOK_MOD, TOK_UNUM_TYPE, TOK_INUM_TYPE, TOK_FNUM_TYPE, TOK_CONST, TOK_STR_TYPE, TOK_BOOL_TYPE, TOK_CAST, TOK_INCLUDE]
   64 expression: expression . '+' expression
   65           | expression . '-' expression
   66           | expression . '*' expression
   67           | expression . '/' expression
   68           | expression . '%' expression

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '%'  shift, and go to state 88

    $default  reduce using rule 46 (class2_instruction)


State 77

   51 class4_instruction: TOK_SAVE TOK_SYMBOL .

    $default  reduce using rule 51 (class4_instruction)


State 78

   52 class3_instruction: TOK_CAST TOK_SYMBOL . type_spec

    TOK_UNUM_TYPE  shift, and go to state 2
    TOK_INUM_TYPE  shift, and go to state 3
    TOK_FNUM_TYPE  shift, and go to state 4
    TOK_CONST      shift, and go to state 5
    TOK_BOOL_TYPE  shift, and go to state 7

    type_spec  go to state 89


State 79

   59 instruction_list: instruction_list instruction_item .

    $default  reduce using rule 59 (instruction_list)


State 80

   19 data_definition: type_spec TOK_SYMBOL '=' . expression
   20                | type_spec TOK_SYMBOL '=' . TOK_SYMBOL

    TOK_SYMBOL  shift, and go to state 90
    TOK_UNUM    shift, and go to state 62
    TOK_INUM    shift, and go to state 63
    TOK_FNUM    shift, and go to state 64
    '-'         shift, and go to state 65
    '('         shift, and go to state 66

    expression_factor  go to state 67
    expression         go to state 91


State 81

   21 data_definition: TOK_STR_TYPE TOK_SYMBOL '=' TOK_STR .

    $default  reduce using rule 21 (data_definition)


State 82

   64 expression: expression . '+' expression
   65           | expression . '-' expression
   66           | expression . '*' expression
   67           | expression . '/' expression
   68           | expression . '%' expression
   69           | '-' expression .  [$end, TOK_SYMBOL, TOK_ERROR, TOK_NOOP, TOK_EXIT, TOK_CALL, TOK_CALLX, TOK_RETURN, TOK_JMP, TOK_JMPIF, TOK_EXCEPT, TOK_PUSH, TOK_POP, TOK_SAVE, TOK_NOT, TOK_EQ, TOK_NEQ, TOK_LEQ, TOK_GEQ, TOK_LESS, TOK_PRINT, TOK_GTR, TOK_NEG, TOK_ADD, TOK_SUB, TOK_MUL, TOK_DIV, TOK_MOD, TOK_UNUM_TYPE, TOK_INUM_TYPE, TOK_FNUM_TYPE, TOK_CONST, TOK_STR_TYPE, TOK_BOOL_TYPE, TOK_CAST, TOK_INCLUDE, '+', '-', '*', '/', '%', ')']

    $default  reduce using rule 69 (expression)


State 83

   64 expression: expression . '+' expression
   65           | expression . '-' expression
   66           | expression . '*' expression
   67           | expression . '/' expression
   68           | expression . '%' expression
   70           | '(' expression . ')'

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '%'  shift, and go to state 88
    ')'  shift, and go to state 92


State 84

   64 expression: expression '+' . expression

    TOK_UNUM  shift, and go to state 62
    TOK_INUM  shift, and go to state 63
    TOK_FNUM  shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 66

    expression_factor  go to state 67
    expression         go to state 93


State 85

   65 expression: expression '-' . expression

    TOK_UNUM  shift, and go to state 62
    TOK_INUM  shift, and go to state 63
    TOK_FNUM  shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 66

    expression_factor  go to state 67
    expression         go to state 94


State 86

   66 expression: expression '*' . expression

    TOK_UNUM  shift, and go to state 62
    TOK_INUM  shift, and go to state 63
    TOK_FNUM  shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 66

    expression_factor  go to state 67
    expression         go to state 95


State 87

   67 expression: expression '/' . expression

    TOK_UNUM  shift, and go to state 62
    TOK_INUM  shift, and go to state 63
    TOK_FNUM  shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 66

    expression_factor  go to state 67
    expression         go to state 96


State 88

   68 expression: expression '%' . expression

    TOK_UNUM  shift, and go to state 62
    TOK_INUM  shift, and go to state 63
    TOK_FNUM  shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 66

    expression_factor  go to state 67
    expression         go to state 97


State 89

   52 class3_instruction: TOK_CAST TOK_SYMBOL type_spec .

    $default  reduce using rule 52 (class3_instruction)


State 90

   20 data_definition: type_spec TOK_SYMBOL '=' TOK_SYMBOL .

    $default  reduce using rule 20 (data_definition)


State 91

   19 data_definition: type_spec TOK_SYMBOL '=' expression .  [$end, TOK_SYMBOL, TOK_UNUM_TYPE, TOK_INUM_TYPE, TOK_FNUM_TYPE, TOK_CONST, TOK_STR_TYPE, TOK_BOOL_TYPE, TOK_INCLUDE]
   64 expression: expression . '+' expression
   65           | expression . '-' expression
   66           | expression . '*' expression
   67           | expression . '/' expression
   68           | expression . '%' expression

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '%'  shift, and go to state 88

    $default  reduce using rule 19 (data_definition)


State 92

   70 expression: '(' expression ')' .

    $default  reduce using rule 70 (expression)


State 93

   64 expression: expression . '+' expression
   64           | expression '+' expression .  [$end, TOK_SYMBOL, TOK_ERROR, TOK_NOOP, TOK_EXIT, TOK_CALL, TOK_CALLX, TOK_RETURN, TOK_JMP, TOK_JMPIF, TOK_EXCEPT, TOK_PUSH, TOK_POP, TOK_SAVE, TOK_NOT, TOK_EQ, TOK_NEQ, TOK_LEQ, TOK_GEQ, TOK_LESS, TOK_PRINT, TOK_GTR, TOK_NEG, TOK_ADD, TOK_SUB, TOK_MUL, TOK_DIV, TOK_MOD, TOK_UNUM_TYPE, TOK_INUM_TYPE, TOK_FNUM_TYPE, TOK_CONST, TOK_STR_TYPE, TOK_BOOL_TYPE, TOK_CAST, TOK_INCLUDE, '+', '-', ')']
   65           | expression . '-' expression
   66           | expression . '*' expression
   67           | expression . '/' expression
   68           | expression . '%' expression

    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '%'  shift, and go to state 88

    $default  reduce using rule 64 (expression)


State 94

   64 expression: expression . '+' expression
   65           | expression . '-' expression
   65           | expression '-' expression .  [$end, TOK_SYMBOL, TOK_ERROR, TOK_NOOP, TOK_EXIT, TOK_CALL, TOK_CALLX, TOK_RETURN, TOK_JMP, TOK_JMPIF, TOK_EXCEPT, TOK_PUSH, TOK_POP, TOK_SAVE, TOK_NOT, TOK_EQ, TOK_NEQ, TOK_LEQ, TOK_GEQ, TOK_LESS, TOK_PRINT, TOK_GTR, TOK_NEG, TOK_ADD, TOK_SUB, TOK_MUL, TOK_DIV, TOK_MOD, TOK_UNUM_TYPE, TOK_INUM_TYPE, TOK_FNUM_TYPE, TOK_CONST, TOK_STR_TYPE, TOK_BOOL_TYPE, TOK_CAST, TOK_INCLUDE, '+', '-', ')']
   66           | expression . '*' expression
   67           | expression . '/' expression
   68           | expression . '%' expression

    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '%'  shift, and go to state 88

    $default  reduce using rule 65 (expression)


State 95

   64 expression: expression . '+' expression
   65           | expression . '-' expression
   66           | expression . '*' expression
   66           | expression '*' expression .  [$end, TOK_SYMBOL, TOK_ERROR, TOK_NOOP, TOK_EXIT, TOK_CALL, TOK_CALLX, TOK_RETURN, TOK_JMP, TOK_JMPIF, TOK_EXCEPT, TOK_PUSH, TOK_POP, TOK_SAVE, TOK_NOT, TOK_EQ, TOK_NEQ, TOK_LEQ, TOK_GEQ, TOK_LESS, TOK_PRINT, TOK_GTR, TOK_NEG, TOK_ADD, TOK_SUB, TOK_MUL, TOK_DIV, TOK_MOD, TOK_UNUM_TYPE, TOK_INUM_TYPE, TOK_FNUM_TYPE, TOK_CONST, TOK_STR_TYPE, TOK_BOOL_TYPE, TOK_CAST, TOK_INCLUDE, '+', '-', '*', '/', '%', ')']
   67           | expression . '/' expression
   68           | expression . '%' expression

    $default  reduce using rule 66 (expression)


State 96

   64 expression: expression . '+' expression
   65           | expression . '-' expression
   66           | expression . '*' expression
   67           | expression . '/' expression
   67           | expression '/' expression .  [$end, TOK_SYMBOL, TOK_ERROR, TOK_NOOP, TOK_EXIT, TOK_CALL, TOK_CALLX, TOK_RETURN, TOK_JMP, TOK_JMPIF, TOK_EXCEPT, TOK_PUSH, TOK_POP, TOK_SAVE, TOK_NOT, TOK_EQ, TOK_NEQ, TOK_LEQ, TOK_GEQ, TOK_LESS, TOK_PRINT, TOK_GTR, TOK_NEG, TOK_ADD, TOK_SUB, TOK_MUL, TOK_DIV, TOK_MOD, TOK_UNUM_TYPE, TOK_INUM_TYPE, TOK_FNUM_TYPE, TOK_CONST, TOK_STR_TYPE, TOK_BOOL_TYPE, TOK_CAST, TOK_INCLUDE, '+', '-', '*', '/', '%', ')']
   68           | expression . '%' expression

    $default  reduce using rule 67 (expression)


State 97

   64 expression: expression . '+' expression
   65           | expression . '-' expression
   66           | expression . '*' expression
   67           | expression . '/' expression
   68           | expression . '%' expression
   68           | expression '%' expression .  [$end, TOK_SYMBOL, TOK_ERROR, TOK_NOOP, TOK_EXIT, TOK_CALL, TOK_CALLX, TOK_RETURN, TOK_JMP, TOK_JMPIF, TOK_EXCEPT, TOK_PUSH, TOK_POP, TOK_SAVE, TOK_NOT, TOK_EQ, TOK_NEQ, TOK_LEQ, TOK_GEQ, TOK_LESS, TOK_PRINT, TOK_GTR, TOK_NEG, TOK_ADD, TOK_SUB, TOK_MUL, TOK_DIV, TOK_MOD, TOK_UNUM_TYPE, TOK_INUM_TYPE, TOK_FNUM_TYPE, TOK_CONST, TOK_STR_TYPE, TOK_BOOL_TYPE, TOK_CAST, TOK_INCLUDE, '+', '-', '*', '/', '%', ')']

    $default  reduce using rule 68 (expression)
